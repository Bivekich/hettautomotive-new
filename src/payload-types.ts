/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    banners: Banner;
    about: About;
    geography: Geography;
    'news-items': NewsItem;
    contact: Contact;
    'custom-pages': CustomPage;
    settings: Setting;
    'page-descriptions': PageDescription;
    categories: Category;
    subcategories: Subcategory;
    thirdsubcategories: Thirdsubcategory;
    brands: Brand;
    models: Model;
    modifications: Modification;
    catalog: Catalog;
    'email-metrics': EmailMetric;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    banners: BannersSelect<false> | BannersSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
    geography: GeographySelect<false> | GeographySelect<true>;
    'news-items': NewsItemsSelect<false> | NewsItemsSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    'custom-pages': CustomPagesSelect<false> | CustomPagesSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
    'page-descriptions': PageDescriptionsSelect<false> | PageDescriptionsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    subcategories: SubcategoriesSelect<false> | SubcategoriesSelect<true>;
    thirdsubcategories: ThirdsubcategoriesSelect<false> | ThirdsubcategoriesSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    models: ModelsSelect<false> | ModelsSelect<true>;
    modifications: ModificationsSelect<false> | ModificationsSelect<true>;
    catalog: CatalogSelect<false> | CatalogSelect<true>;
    'email-metrics': EmailMetricsSelect<false> | EmailMetricsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners".
 */
export interface Banner {
  id: number;
  title: string;
  slides: {
    number: string;
    subtitle: string;
    title: string;
    link?: string | null;
    image: number | Media;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: number;
  title: string;
  mainContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  features?:
    | {
        title: string;
        description?: string | null;
        icon?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  productionSection: {
    title: string;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    images?:
      | {
          image: number | Media;
          alt?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  buySection: {
    title: string;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    onlineTitle?: string | null;
    distributor?: {
      title?: string | null;
      website?: string | null;
      websiteUrl?: string | null;
      logo?: (number | null) | Media;
      image?: (number | null) | Media;
      buttonText?: string | null;
      buttonUrl?: string | null;
      features?:
        | {
            text: string;
            iconType?: ('wallet' | 'widgets' | 'time' | 'truck' | 'custom') | null;
            customIcon?: (number | null) | Media;
            id?: string | null;
          }[]
        | null;
    };
    partners?:
      | {
          name: string;
          logo: number | Media;
          url?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "geography".
 */
export interface Geography {
  id: number;
  title: string;
  slides: {
    title: string;
    description: string;
    map: number | Media;
    buttonText?: string | null;
    buttonLink?: string | null;
    id?: string | null;
  }[];
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-items".
 */
export interface NewsItem {
  id: number;
  title: string;
  /**
   * Unique URL identifier for the news article (e.g., "new-product-launch")
   */
  slug: string;
  date: string;
  status: 'draft' | 'published';
  /**
   * Brief summary shown in news listings (max 150 characters)
   */
  shortDescription: string;
  /**
   * Main image used for news listings and the first section of the article
   */
  previewImage: number | Media;
  /**
   * The first section of the article with image on the right and text on the left
   */
  firstSection: {
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
  };
  /**
   * Add additional sections with text and optional images
   */
  contentSections?:
    | {
        content: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        /**
         * Optional image to display alongside this content section
         */
        image?: (number | null) | Media;
        /**
         * Choose whether the image appears on the right or left of the text
         */
        imagePosition?: ('right' | 'left') | null;
        id?: string | null;
      }[]
    | null;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  title: string;
  contactInfoSection?: {
    enabled?: boolean | null;
    backgroundColor?: string | null;
    padding?: string | null;
    /**
     * Add contact information elements (with optional titles)
     */
    contactItems?:
      | {
          /**
           * Optional title for this contact item (can be left empty)
           */
          title?: string | null;
          /**
           * First text field (e.g. phone number, email, etc.)
           */
          text1: string;
          /**
           * Second text field (e.g. description, label, etc.)
           */
          text2?: string | null;
          /**
           * URL for text1 if clickable (e.g. tel:, mailto:, https://)
           */
          href?: string | null;
          /**
           * How wide this item should be in the grid
           */
          columnWidth?: ('25' | '50' | '75' | '100') | null;
          /**
           * Order in which to display this item (lower numbers appear first)
           */
          order?: number | null;
          id?: string | null;
        }[]
      | null;
  };
  mapSection: {
    enabled?: boolean | null;
    embedUrl: string;
    height?: number | null;
    title?: string | null;
  };
  formSection?: {
    enabled?: boolean | null;
    title?: string | null;
    introText?: string | null;
    emailContact?: string | null;
    formFields?:
      | {
          fieldName: string;
          fieldType: 'text' | 'email' | 'tel' | 'textarea';
          label: string;
          placeholder?: string | null;
          required?: boolean | null;
          colSpan?: number | null;
          height?: number | null;
          id?: string | null;
        }[]
      | null;
    submitButtonText?: string | null;
    successMessage?: string | null;
    /**
     * Email address where form submissions will be sent
     */
    receiverEmail?: string | null;
  };
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-pages".
 */
export interface CustomPage {
  id: number;
  title: string;
  /**
   * Unique URL identifier for the page (e.g., "about-us" or "terms-of-service")
   */
  slug: string;
  status: 'draft' | 'published';
  /**
   * Display this page in the top navigation menu
   */
  showInMenu?: boolean | null;
  heroSection?: {
    enabled?: boolean | null;
    image?: (number | null) | Media;
    description?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    subtitle?: string | null;
  };
  /**
   * Add content sections to build your page
   */
  contentSections: {
    sectionType: 'content' | 'text-image';
    title?: string | null;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    /**
     * Image to display alongside the content
     */
    image?: (number | null) | Media;
    /**
     * Choose whether the image appears on the right or left of the text
     */
    imagePosition?: ('right' | 'left') | null;
    backgroundColor?: ('transparent' | 'white' | 'light-gray' | 'dark' | 'primary') | null;
    padding?: ('small' | 'medium' | 'large') | null;
    id?: string | null;
  }[];
  /**
   * Override the default page title for SEO purposes
   */
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  /**
   * Identifier for these settings (e.g., "Global Settings")
   */
  name: string;
  header?: {
    /**
     * Main phone number displayed in the header (e.g., "+7 (495) 260 20 60")
     */
    phone?: string | null;
    /**
     * Social media links to display in the header
     */
    socialLinks?:
      | {
          platform:
            | 'telegram'
            | 'whatsapp'
            | 'vk'
            | 'youtube'
            | 'instagram'
            | 'facebook'
            | 'twitter'
            | 'linkedin'
            | 'other';
          /**
           * Full URL including https://
           */
          url: string;
          /**
           * Custom icon for this social platform (defaults to built-in icon if not provided)
           */
          icon?: (number | null) | Media;
          /**
           * Descriptive text for the icon (only needed for "Other")
           */
          title?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  footer?: {
    /**
     * Primary contact phone displayed in the footer
     */
    phone?: string | null;
    /**
     * Descriptive text for the phone number (e.g., "Телефон для связи")
     */
    phoneLabel?: string | null;
    /**
     * Contact email address
     */
    email?: string | null;
    /**
     * Descriptive text for the email (e.g., "Email для связи")
     */
    emailLabel?: string | null;
    /**
     * Physical address of the company
     */
    address?: string | null;
    /**
     * Descriptive text for the address (e.g., "Наш адрес")
     */
    addressLabel?: string | null;
    mapButton?: {
      text?: string | null;
      /**
       * URL to open when the map button is clicked (e.g., Google Maps or Yandex Maps link)
       */
      url?: string | null;
      enabled?: boolean | null;
    };
    /**
     * Social media links to display in the footer (can be different from header)
     */
    socialLinks?:
      | {
          platform:
            | 'telegram'
            | 'whatsapp'
            | 'vk'
            | 'youtube'
            | 'instagram'
            | 'facebook'
            | 'twitter'
            | 'linkedin'
            | 'other';
          /**
           * Full URL including https://
           */
          url: string;
          /**
           * Custom icon for this social platform (defaults to built-in icon if not provided)
           */
          icon?: (number | null) | Media;
          /**
           * Descriptive text for the icon (only needed for "Other")
           */
          title?: string | null;
          id?: string | null;
        }[]
      | null;
    legalDocuments?: {
      /**
       * Copyright statement (e.g., "© 2024 Hett Automotive. Все права защищены")
       */
      copyright?: string | null;
      termsOfUse?: {
        /**
         * Display text for Terms of Use link
         */
        label?: string | null;
        /**
         * URL or path to the Terms of Use page (e.g., "/terms")
         */
        url?: string | null;
      };
      privacyPolicy?: {
        /**
         * Display text for Privacy Policy link
         */
        label?: string | null;
        /**
         * URL or path to the Privacy Policy page (e.g., "/privacy")
         */
        url?: string | null;
      };
      /**
       * Any additional legal links to display in the footer
       */
      additionalLinks?:
        | {
            label: string;
            url: string;
            id?: string | null;
          }[]
        | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-descriptions".
 */
export interface PageDescription {
  id: number;
  /**
   * The type of page this description is for
   */
  pageType: 'catalog' | 'news';
  /**
   * The title displayed at the top of the description section
   */
  title: string;
  /**
   * Paragraphs of text for the description section
   */
  content: {
    paragraph: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    id?: string | null;
  }[];
  /**
   * Whether this description is currently displayed on the page
   */
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  slug: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Category image
   */
  image?: (number | null) | Media;
  /**
   * Category icon
   */
  icon?: (number | null) | Media;
  /**
   * Show this category in featured sections
   */
  featured?: boolean | null;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories".
 */
export interface Subcategory {
  id: number;
  name: string;
  slug: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  category: number | Category;
  /**
   * Subcategory image
   */
  image?: (number | null) | Media;
  /**
   * Subcategory icon
   */
  icon?: (number | null) | Media;
  /**
   * Show this subcategory in featured sections
   */
  featured?: boolean | null;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "thirdsubcategories".
 */
export interface Thirdsubcategory {
  id: number;
  name: string;
  slug: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  subcategory: number | Subcategory;
  /**
   * Third subcategory image
   */
  image?: (number | null) | Media;
  /**
   * Third subcategory icon
   */
  icon?: (number | null) | Media;
  /**
   * Show this third subcategory in featured sections
   */
  featured?: boolean | null;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  name: string;
  slug: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Brand logo
   */
  logo?: (number | null) | Media;
  /**
   * Link this brand to the relevant third-level subcategories it applies to.
   */
  thirdsubcategories?: (number | Thirdsubcategory)[] | null;
  /**
   * Show this brand in featured sections
   */
  featured?: boolean | null;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models".
 */
export interface Model {
  id: number;
  name: string;
  slug: string;
  brand: number | Brand;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Show this model in featured sections
   */
  featured?: boolean | null;
  /**
   * Model image
   */
  image?: (number | null) | Media;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modifications".
 */
export interface Modification {
  id: number;
  name: string;
  slug: string;
  model: number | Model;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  yearStart?: number | null;
  yearEnd?: number | null;
  specifications?:
    | {
        name: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Modification image
   */
  image?: (number | null) | Media;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "catalog".
 */
export interface Catalog {
  id: number;
  name: string;
  slug: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  shortDescription?: string | null;
  brand?: (number | Brand)[] | null;
  model?: (number | null) | Model;
  modification?: (number | null) | Modification;
  category: number | Category;
  subcategory?: (number | null) | Subcategory;
  thirdsubcategory?: (number | null) | Thirdsubcategory;
  images?:
    | {
        image?: (number | null) | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  featured?: boolean | null;
  inStock?: boolean | null;
  specifications?:
    | {
        name: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  oem?: string | null;
  /**
   * Уникальный артикуль товара
   */
  article: string;
  marketplaceLinks?: {
    ozon?: string | null;
    wildberries?: string | null;
    others?:
      | {
          name: string;
          url: string;
          logo?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  distributors?:
    | {
        name: string;
        url: string;
        location?: string | null;
        id?: string | null;
      }[]
    | null;
  metaTitle?: string | null;
  metaDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Track metrics for different types of emails sent
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-metrics".
 */
export interface EmailMetric {
  id: number;
  type: 'contact_form' | 'vin_request';
  /**
   * Number of emails sent for this type
   */
  count: number;
  /**
   * Last time an email of this type was sent
   */
  lastSentAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'banners';
        value: number | Banner;
      } | null)
    | ({
        relationTo: 'about';
        value: number | About;
      } | null)
    | ({
        relationTo: 'geography';
        value: number | Geography;
      } | null)
    | ({
        relationTo: 'news-items';
        value: number | NewsItem;
      } | null)
    | ({
        relationTo: 'contact';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'custom-pages';
        value: number | CustomPage;
      } | null)
    | ({
        relationTo: 'settings';
        value: number | Setting;
      } | null)
    | ({
        relationTo: 'page-descriptions';
        value: number | PageDescription;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'subcategories';
        value: number | Subcategory;
      } | null)
    | ({
        relationTo: 'thirdsubcategories';
        value: number | Thirdsubcategory;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'models';
        value: number | Model;
      } | null)
    | ({
        relationTo: 'modifications';
        value: number | Modification;
      } | null)
    | ({
        relationTo: 'catalog';
        value: number | Catalog;
      } | null)
    | ({
        relationTo: 'email-metrics';
        value: number | EmailMetric;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners_select".
 */
export interface BannersSelect<T extends boolean = true> {
  title?: T;
  slides?:
    | T
    | {
        number?: T;
        subtitle?: T;
        title?: T;
        link?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  title?: T;
  mainContent?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  productionSection?:
    | T
    | {
        title?: T;
        description?: T;
        images?:
          | T
          | {
              image?: T;
              alt?: T;
              id?: T;
            };
      };
  buySection?:
    | T
    | {
        title?: T;
        description?: T;
        onlineTitle?: T;
        distributor?:
          | T
          | {
              title?: T;
              website?: T;
              websiteUrl?: T;
              logo?: T;
              image?: T;
              buttonText?: T;
              buttonUrl?: T;
              features?:
                | T
                | {
                    text?: T;
                    iconType?: T;
                    customIcon?: T;
                    id?: T;
                  };
            };
        partners?:
          | T
          | {
              name?: T;
              logo?: T;
              url?: T;
              id?: T;
            };
      };
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "geography_select".
 */
export interface GeographySelect<T extends boolean = true> {
  title?: T;
  slides?:
    | T
    | {
        title?: T;
        description?: T;
        map?: T;
        buttonText?: T;
        buttonLink?: T;
        id?: T;
      };
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-items_select".
 */
export interface NewsItemsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  date?: T;
  status?: T;
  shortDescription?: T;
  previewImage?: T;
  firstSection?:
    | T
    | {
        content?: T;
      };
  contentSections?:
    | T
    | {
        content?: T;
        image?: T;
        imagePosition?: T;
        id?: T;
      };
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  title?: T;
  contactInfoSection?:
    | T
    | {
        enabled?: T;
        backgroundColor?: T;
        padding?: T;
        contactItems?:
          | T
          | {
              title?: T;
              text1?: T;
              text2?: T;
              href?: T;
              columnWidth?: T;
              order?: T;
              id?: T;
            };
      };
  mapSection?:
    | T
    | {
        enabled?: T;
        embedUrl?: T;
        height?: T;
        title?: T;
      };
  formSection?:
    | T
    | {
        enabled?: T;
        title?: T;
        introText?: T;
        emailContact?: T;
        formFields?:
          | T
          | {
              fieldName?: T;
              fieldType?: T;
              label?: T;
              placeholder?: T;
              required?: T;
              colSpan?: T;
              height?: T;
              id?: T;
            };
        submitButtonText?: T;
        successMessage?: T;
        receiverEmail?: T;
      };
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-pages_select".
 */
export interface CustomPagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  status?: T;
  showInMenu?: T;
  heroSection?:
    | T
    | {
        enabled?: T;
        image?: T;
        description?: T;
        subtitle?: T;
      };
  contentSections?:
    | T
    | {
        sectionType?: T;
        title?: T;
        content?: T;
        image?: T;
        imagePosition?: T;
        backgroundColor?: T;
        padding?: T;
        id?: T;
      };
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  name?: T;
  header?:
    | T
    | {
        phone?: T;
        socialLinks?:
          | T
          | {
              platform?: T;
              url?: T;
              icon?: T;
              title?: T;
              id?: T;
            };
      };
  footer?:
    | T
    | {
        phone?: T;
        phoneLabel?: T;
        email?: T;
        emailLabel?: T;
        address?: T;
        addressLabel?: T;
        mapButton?:
          | T
          | {
              text?: T;
              url?: T;
              enabled?: T;
            };
        socialLinks?:
          | T
          | {
              platform?: T;
              url?: T;
              icon?: T;
              title?: T;
              id?: T;
            };
        legalDocuments?:
          | T
          | {
              copyright?: T;
              termsOfUse?:
                | T
                | {
                    label?: T;
                    url?: T;
                  };
              privacyPolicy?:
                | T
                | {
                    label?: T;
                    url?: T;
                  };
              additionalLinks?:
                | T
                | {
                    label?: T;
                    url?: T;
                    id?: T;
                  };
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-descriptions_select".
 */
export interface PageDescriptionsSelect<T extends boolean = true> {
  pageType?: T;
  title?: T;
  content?:
    | T
    | {
        paragraph?: T;
        id?: T;
      };
  active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  icon?: T;
  featured?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories_select".
 */
export interface SubcategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  category?: T;
  image?: T;
  icon?: T;
  featured?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "thirdsubcategories_select".
 */
export interface ThirdsubcategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  subcategory?: T;
  image?: T;
  icon?: T;
  featured?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  logo?: T;
  thirdsubcategories?: T;
  featured?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "models_select".
 */
export interface ModelsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  brand?: T;
  description?: T;
  featured?: T;
  image?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modifications_select".
 */
export interface ModificationsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  model?: T;
  description?: T;
  yearStart?: T;
  yearEnd?: T;
  specifications?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  image?: T;
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "catalog_select".
 */
export interface CatalogSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  shortDescription?: T;
  brand?: T;
  model?: T;
  modification?: T;
  category?: T;
  subcategory?: T;
  thirdsubcategory?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  featured?: T;
  inStock?: T;
  specifications?:
    | T
    | {
        name?: T;
        value?: T;
        id?: T;
      };
  oem?: T;
  article?: T;
  marketplaceLinks?:
    | T
    | {
        ozon?: T;
        wildberries?: T;
        others?:
          | T
          | {
              name?: T;
              url?: T;
              logo?: T;
              id?: T;
            };
      };
  distributors?:
    | T
    | {
        name?: T;
        url?: T;
        location?: T;
        id?: T;
      };
  metaTitle?: T;
  metaDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-metrics_select".
 */
export interface EmailMetricsSelect<T extends boolean = true> {
  type?: T;
  count?: T;
  lastSentAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}